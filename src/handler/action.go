package handler

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"bytes"
	"minify"
	"net/http"
)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

func Action(w http.ResponseWriter, r *http.Request) {

	switch r.Method {
	case http.MethodGet:
		actionGet(w, r)

	default:
		http.NotFound(w, r)
	}

}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

func actionGet(w http.ResponseWriter, r *http.Request) {
	buffer := new(bytes.Buffer)

	err := templates.ExecuteTemplate(
		buffer,
		"Action",
		nil,
	)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}

	w.Write(minify.Minify(buffer.Bytes()))
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
