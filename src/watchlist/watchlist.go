package watchlist

//////////////////////////////////////////////////////////////////////////////////////////////////////

import (
	"config"
	"encoding/json"
)

//////////////////////////////////////////////////////////////////////////////////////////////////////

type WatchList struct {
	Symbol string
	Price  float64

	Position []int `bson:"-" json:"-"`
}

//////////////////////////////////////////////////////////////////////////////////////////////////////

func (w *WatchList) JsonDecode(buffer []byte) error {

	err := json.Unmarshal(buffer, w)
	if err != nil {
		return err
	}

	return nil
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

func (w *WatchList) Caculate(capital float64) {

	w.Position = make([]int, len(config.WatchListPosition))

	for i, p := range config.WatchListPosition {
		c := capital * p
		share := int(c / w.Price)

		w.Position[i] = share
	}
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
